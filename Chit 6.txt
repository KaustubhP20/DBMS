create or replace NONEDITIONABLE FUNCTION FUNC_1 
(
  R IN NUMBER 
, N IN VARCHAR2 
, M IN NUMBER 
) RETURN VARCHAR2 AS 
BEGIN
  PROCEDURE_1(R,N,M);
  RETURN 'SUCCESSFULL';
END FUNC_1;

create or replace NONEDITIONABLE PROCEDURE PROCEDURE_1 
(
  ROLL_NO IN NUMBER 
, NAME IN VARCHAR2 
, MARKS IN NUMBER 
) AS 
BEGIN
IF (MARKS <= 1500 AND MARKS >= 990) THEN
DBMS_OUTPUT.PUT_LINE('DISTINCTION');
INSERT INTO RESULT VALUES(ROLL_NO, NAME, 'DISTINCTION');
ELSIF (MARKS <= 989 AND MARKS >= 900) THEN
DBMS_OUTPUT.PUT_LINE('FIRST CLASS');
INSERT INTO RESULT VALUES(ROLL_NO, NAME, 'FIRST CLASS');
ELSIF (MARKS <= 899 AND MARKS >= 825) THEN
DBMS_OUTPUT.PUT_LINE('HIGHER SECOND CLASS');
INSERT INTO RESULT VALUES(ROLL_NO, NAME, 'HIGHER SECOND CLASS');
ELSE
DBMS_OUTPUT.PUT_LINE('FAIL');
INSERT INTO RESULT VALUES(ROLL_NO, NAME, 'FAIL');
END IF;

INSERT INTO STUD_MARKS VALUES(NAME, MARKS);
END PROCEDURE_1;

SET SERVEROUTPUT ON;

DECLARE
NAME_1 VARCHAR2(20);
ROLL_NO_1 NUMBER;
MARKS_1 NUMBER;
CLASS VARCHAR2(20);

BEGIN
ROLL_NO_1 := &ROLL_NO_1;
NAME_1 := &NAME_1;
MARKS_1 := &MARKS_1;
CLASS := FUNC_1(ROLL_NO_1, NAME_1, MARKS_1);
DBMS_OUTPUT.PUT_LINE(CLASS);

END;
/

